[{"/home/usestack/trungDev/project/tvt/tvt/src/reportWebVitals.ts":"1","/home/usestack/trungDev/project/tvt/tvt/src/App.tsx":"2","/home/usestack/trungDev/project/tvt/tvt/src/apollo/unauth-client.tsx":"3","/home/usestack/trungDev/project/tvt/tvt/src/config/index.ts":"4","/home/usestack/trungDev/project/tvt/tvt/src/router/auth/sign-up.tsx":"5","/home/usestack/trungDev/project/tvt/tvt/src/router/auth/forgot-password.tsx":"6","/home/usestack/trungDev/project/tvt/tvt/src/router/auth/verify-email.tsx":"7","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/index.tsx":"8","/home/usestack/trungDev/project/tvt/tvt/src/app/auth/forgot-password.tsx":"9","/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/index.tsx":"10","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cart/index.tsx":"11","/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/contact-number.tsx":"12","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cart/product.tsx":"13","/home/usestack/trungDev/project/tvt/tvt/src/components/header/fillter.tsx":"14","/home/usestack/trungDev/project/tvt/tvt/src/graphql/autogenerate/hooks.tsx":"15","/home/usestack/trungDev/project/tvt/tvt/src/AppStore.tsx":"16","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/main-home.tsx":"17","/home/usestack/trungDev/project/tvt/tvt/src/components/header/index.tsx":"18","/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/delivery-address.tsx":"19","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cards/product.tsx":"20","/home/usestack/trungDev/project/tvt/tvt/src/hooks/use-auth.tsx":"21","/home/usestack/trungDev/project/tvt/tvt/src/contexts/cart-reducer.tsx":"22","/home/usestack/trungDev/project/tvt/tvt/src/router/auth/sign-in.tsx":"23","/home/usestack/trungDev/project/tvt/tvt/src/app/auth/auth-layout.tsx":"24","/home/usestack/trungDev/project/tvt/tvt/src/app/auth/setup.tsx":"25","/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/YourOrder/index.tsx":"26","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cards/list.tsx":"27","/home/usestack/trungDev/project/tvt/tvt/src/contexts/cart-context.tsx":"28","/home/usestack/trungDev/project/tvt/tvt/src/app/auth/sign-in.tsx":"29","/home/usestack/trungDev/project/tvt/tvt/src/hooks/use-media.tsx":"30","/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/payment-option.tsx":"31"},{"size":425,"mtime":1609472026725,"results":"32","hashOfConfig":"33"},{"size":6938,"mtime":1615352791848,"results":"34","hashOfConfig":"33"},{"size":391,"mtime":1609695110585,"results":"35","hashOfConfig":"33"},{"size":1880,"mtime":1615477649079,"results":"36","hashOfConfig":"33"},{"size":132,"mtime":1610003801085,"results":"37","hashOfConfig":"33"},{"size":164,"mtime":1610003801069,"results":"38","hashOfConfig":"33"},{"size":151,"mtime":1610003801085,"results":"39","hashOfConfig":"33"},{"size":333,"mtime":1615308241711,"results":"40","hashOfConfig":"33"},{"size":3599,"mtime":1611752002924,"results":"41","hashOfConfig":"33"},{"size":528,"mtime":1615308241707,"results":"42","hashOfConfig":"33"},{"size":6856,"mtime":1615374423675,"results":"43","hashOfConfig":"33"},{"size":9710,"mtime":1615308241707,"results":"44","hashOfConfig":"33"},{"size":5246,"mtime":1615308241711,"results":"45","hashOfConfig":"33"},{"size":3446,"mtime":1615481591386,"results":"46","hashOfConfig":"33"},{"size":23666,"mtime":1615308241719,"results":"47","hashOfConfig":"33"},{"size":532,"mtime":1615308241695,"results":"48","hashOfConfig":"33"},{"size":1631,"mtime":1615308241711,"results":"49","hashOfConfig":"33"},{"size":5322,"mtime":1615383942282,"results":"50","hashOfConfig":"33"},{"size":10965,"mtime":1615308241707,"results":"51","hashOfConfig":"33"},{"size":5112,"mtime":1615308676968,"results":"52","hashOfConfig":"33"},{"size":2321,"mtime":1610899921815,"results":"53","hashOfConfig":"33"},{"size":2150,"mtime":1615308703716,"results":"54","hashOfConfig":"33"},{"size":132,"mtime":1610003801085,"results":"55","hashOfConfig":"33"},{"size":1350,"mtime":1615308241703,"results":"56","hashOfConfig":"33"},{"size":8181,"mtime":1615308241703,"results":"57","hashOfConfig":"33"},{"size":486,"mtime":1614959077208,"results":"58","hashOfConfig":"33"},{"size":3142,"mtime":1615353237349,"results":"59","hashOfConfig":"33"},{"size":1332,"mtime":1615308241715,"results":"60","hashOfConfig":"33"},{"size":6666,"mtime":1615308241703,"results":"61","hashOfConfig":"33"},{"size":562,"mtime":1610899908499,"results":"62","hashOfConfig":"33"},{"size":10214,"mtime":1615308241707,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1q0cuxs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/usestack/trungDev/project/tvt/tvt/src/reportWebVitals.ts",[],["131","132"],"/home/usestack/trungDev/project/tvt/tvt/src/App.tsx",["133"],"/home/usestack/trungDev/project/tvt/tvt/src/apollo/unauth-client.tsx",[],["134","135"],"/home/usestack/trungDev/project/tvt/tvt/src/config/index.ts",[],"/home/usestack/trungDev/project/tvt/tvt/src/router/auth/sign-up.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/router/auth/forgot-password.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/router/auth/verify-email.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/index.tsx",["136","137"],"import React, { useRef, useState } from \"react\";\nimport { Header } from \"../header\";\nimport { MainHome } from \"./main-home\";\nimport { ListProducts } from \"./cards\";\nimport { Cart } from \"./cart\";\n\nexport const Home = () => {\n  return (\n    <>\n      <Header />\n      <Cart />\n      <MainHome />\n      <ListProducts />\n    </>\n  );\n};\n","/home/usestack/trungDev/project/tvt/tvt/src/app/auth/forgot-password.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/index.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cart/index.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/contact-number.tsx",["138","139"],"/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cart/product.tsx",[],["140","141"],"/home/usestack/trungDev/project/tvt/tvt/src/components/header/fillter.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/graphql/autogenerate/hooks.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/AppStore.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/main-home.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/header/index.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/delivery-address.tsx",["142","143"],"import { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport {\n  GetAddressDocument,\n  useAddAddressMutation,\n  useDeleteAddressMutation,\n  useGetAddressQuery,\n} from \"../../../graphql/autogenerate/hooks\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport useMedia from \"../../../hooks/use-media\";\n\nexport const DeliveryAddress = () => {\n  const isWide = useMedia(\"(min-width: 480px)\");\n  const [isOpen, setIsOpen] = useState(false);\n  const { addToast } = useToasts();\n  const [addAddress] = useAddAddressMutation();\n  const {\n    state: { user },\n  } = useAuth();\n\n  const formik: any = useFormik({\n    initialValues: {\n      city: \"\",\n      district: \"\",\n      commune: \"\",\n      label: \"\",\n    },\n    onSubmit: async (values) => {\n      try {\n        formik.setSubmitting(true);\n        addToast(\"Successfull!\", {\n          appearance: \"info\",\n          autoDismiss: true,\n        });\n        {\n          /* {city, district, commune, label} */\n        }\n\n        const dataRes = await addAddress({\n          variables: {\n            email: user?.email || \"\",\n            address: {\n              city: values.city,\n              district: values.district,\n              commune: values.commune,\n              label: values.label,\n            },\n          },\n          refetchQueries: [\n            {\n              query: GetAddressDocument,\n              variables: { email: user?.email || \"\" },\n            },\n          ],\n          awaitRefetchQueries: true,\n        });\n        formik.setSubmitting(false);\n        setIsOpen(false);\n        formik.handleReset();\n      } catch (error) {\n        addToast(error.message, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n        formik.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <div>\n      <div\n        style={{\n          padding: \"30px\",\n          boxShadow: \"0 2px 8px hsla(0, 0%, 0%, 0.16)\",\n          backgroundColor: \"rgb(255, 255, 255)\",\n          margin: \"10px\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            paddingBottom: \"26px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <h1>\n            <span\n              style={{\n                background: \"rgb(5, 148, 79)\",\n                borderRadius: \"30px\",\n                fontSize: \"18px\",\n                color: \"rgb(255, 255, 255)\",\n                padding: \"6px 12px\",\n              }}\n            >\n              1\n            </span>\n            <strong style={{ paddingLeft: \"18px\", fontSize: \"18px\" }}>\n              Delivery Address\n            </strong>\n          </h1>\n\n          <button\n            style={{\n              alignItems: \"center\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              outline: \"none\",\n              fontSize: \"14px\",\n              fontWeight: 700,\n              color: \"rgb(0, 158, 127)\",\n              lineHeight: \"24px\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              setIsOpen(true);\n            }}\n          >\n            + Add Address\n          </button>\n        </div>\n        <div\n          style={{\n            overflow: \"scroll\",\n            overflowX: \"hidden\",\n            scrollbarWidth: \"thin\",\n            scrollBehavior: \"smooth\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fill, minmax(164px, 1fr))\",\n            gridGap: isWide ? \"6px\" : \"3px\",\n            maxHeight: \"260px\",\n          }}\n        >\n          <Phones />\n        </div>\n        <div\n          style={{\n            padding: \"20px\",\n            width: \"50%\",\n            backgroundColor: \"rgb(255, 255, 255)\",\n            marginRight: \"15px\",\n            marginBottom: \"15px\",\n            border: \"1px solid rgb(5, 148, 79)\",\n            borderRadius: \"5px\",\n            transition: \"all 0.25s ease 0s\",\n            textAlign: \"center\",\n            display: isOpen ? \"\" : \"none\",\n            position: \"relative\",\n          }}\n        >\n          <button\n            style={{\n              alignItems: \"center\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              outline: \"none\",\n              fontSize: \"14px\",\n              fontWeight: 700,\n              color: \"rgb(0, 158, 127)\",\n              lineHeight: \"24px\",\n              cursor: \"pointer\",\n              position: \"absolute\",\n              top: \"6px\",\n              right: \"6px\",\n            }}\n            onClick={() => {\n              setIsOpen(false);\n            }}\n          >\n            x\n          </button>\n          <h1\n            style={{\n              fontSize: \"14px\",\n              fontWeight: 700,\n              marginBottom: \"6px\",\n            }}\n          >\n            Add new address\n          </h1>\n          <form\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              flexDirection: \"column\",\n            }}\n            onSubmit={formik.handleSubmit}\n          >\n            <input\n              style={{\n                borderRadius: \"6px\",\n                padding: \"8px 16px\",\n                margin: \"6px 0\",\n              }}\n              required\n              name=\"label\"\n              placeholder=\"Label\"\n              type=\"text\"\n              onChange={(e) => {\n                formik.setFieldValue(\"label\", e.currentTarget.value);\n              }}\n              onBlur={formik.handleBlur}\n              value={formik.values.label}\n            />\n            {/* {city, district, commune, label} */}\n            <input\n              style={{\n                borderRadius: \"6px\",\n                padding: \"8px 16px\",\n                margin: \"6px 0\",\n              }}\n              required\n              name=\"city\"\n              placeholder=\"Your city\"\n              type=\"text\"\n              onChange={(e) => {\n                formik.setFieldValue(\"city\", e.currentTarget.value);\n              }}\n              onBlur={formik.handleBlur}\n              value={formik.values.city}\n            />\n            <input\n              style={{\n                borderRadius: \"6px\",\n                padding: \"8px 16px\",\n                margin: \"6px 0\",\n              }}\n              required\n              name=\"district\"\n              placeholder=\"Your district\"\n              type=\"text\"\n              onChange={(e) => {\n                formik.setFieldValue(\"district\", e.currentTarget.value);\n              }}\n              onBlur={formik.handleBlur}\n              value={formik.values.district}\n            />\n            <input\n              style={{\n                borderRadius: \"6px\",\n                padding: \"8px 16px\",\n                margin: \"6px 0\",\n              }}\n              required\n              name=\"commune\"\n              placeholder=\"Your local\"\n              type=\"text\"\n              onChange={(e) => {\n                formik.setFieldValue(\"commune\", e.currentTarget.value);\n              }}\n              onBlur={formik.handleBlur}\n              value={formik.values.commune}\n            />\n            <button\n              style={{\n                borderRadius: \"6px\",\n                marginTop: \"12px\",\n                backgroundColor: \"#05944F\",\n                boxShadow: \"0 1px 4px hsla(0, 0%, 0%, 0.16)\",\n                padding: \"8px 16px\",\n                margin: \"6px 0\",\n              }}\n              disabled={formik.isSubmitting}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Phones = () => {\n  const [opt, setOpt] = useState(localStorage.getItem(\"DeliveryAddress\") || \"\");\n  const [loadingDelete, setLoadingDelete] = useState(-1);\n\n  const {\n    state: { user },\n  } = useAuth();\n\n  const [deleteAddress] = useDeleteAddressMutation();\n  const { addToast } = useToasts();\n\n  const { data, error, loading } = useGetAddressQuery({\n    variables: { email: user?.email || \"\" },\n  });\n  if (error && !data) {\n    console.log(error);\n    return <div>Error...</div>;\n  }\n  if (loading && !data) {\n    return <div>Loading...</div>;\n  }\n  return data?.users[0].address.map((el: any, idx: any) => {\n    return (\n      <div\n        key={idx}\n        onClick={() => {\n          localStorage.setItem(\"DeliveryAddress\", idx);\n          setOpt(idx);\n        }}\n        style={{\n          height: \"64px\",\n          maxWidth: \"200px\",\n          padding: \"20px\",\n          backgroundColor:\n            opt === idx ? \"rgb(255, 255, 255)\" : \"rgb(246, 246, 246)\",\n          marginRight: \"15px\",\n          marginBottom: \"15px\",\n          border: `1px solid ${\n            opt === idx ? \"rgb(5, 148, 79)\" : \"transparent\"\n          }`,\n          borderRadius: \"5px\",\n          transition: \"all 0.25s ease 0s\",\n          cursor: \"pointer\",\n          position: \"relative\",\n        }}\n      >\n        <button\n          style={{\n            alignItems: \"center\",\n            backgroundColor: \"transparent\",\n            border: \"none\",\n            outline: \"none\",\n            fontSize: \"14px\",\n            fontWeight: 700,\n            color: \"rgb(0, 158, 127)\",\n            lineHeight: \"24px\",\n            cursor: \"pointer\",\n            position: \"absolute\",\n            top: \"6px\",\n            right: \"6px\",\n          }}\n          onClick={async () => {\n            try {\n              setLoadingDelete(idx);\n              const dataRes = await deleteAddress({\n                variables: {\n                  email: user?.email || \"\",\n                  index: idx,\n                },\n                refetchQueries: [\n                  {\n                    query: GetAddressDocument,\n                    variables: { email: user?.email || \"\" },\n                  },\n                ],\n                awaitRefetchQueries: true,\n              });\n              console.log(dataRes);\n              setLoadingDelete(-1);\n              addToast(\"Delete successfull!\", {\n                appearance: \"info\",\n                autoDismiss: true,\n              });\n            } catch (error) {\n              addToast(error.message, {\n                appearance: \"error\",\n                autoDismiss: true,\n              });\n              setLoadingDelete(-1);\n            }\n          }}\n        >\n          x\n        </button>\n        {loadingDelete === idx ? (\n          <h1>Loading...</h1>\n        ) : (\n          <>\n            <h1\n              style={{\n                fontSize: \"14px\",\n                fontWeight: 700,\n                marginBottom: \"6px\",\n              }}\n            >\n              {el.label}\n            </h1>\n            <p>\n              {el.city} - {el.district} - {el.commune}\n            </p>\n          </>\n        )}\n      </div>\n    );\n  });\n};\n","/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cards/product.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/hooks/use-auth.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/contexts/cart-reducer.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/router/auth/sign-in.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/app/auth/auth-layout.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/app/auth/setup.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/YourOrder/index.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/mainPage/cards/list.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/contexts/cart-context.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/app/auth/sign-in.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/hooks/use-media.tsx",[],"/home/usestack/trungDev/project/tvt/tvt/src/components/checkout/Informations/payment-option.tsx",["144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":142,"column":15,"nodeType":"152","messageId":"153","endLine":142,"endColumn":23},{"ruleId":"146","replacedBy":"154"},{"ruleId":"148","replacedBy":"155"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":23},{"ruleId":"150","severity":1,"message":"157","line":1,"column":25,"nodeType":"152","messageId":"153","endLine":1,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":34,"column":9,"nodeType":"160","messageId":"161","endLine":36,"endColumn":10},{"ruleId":"150","severity":1,"message":"162","line":38,"column":15,"nodeType":"152","messageId":"153","endLine":38,"endColumn":22},{"ruleId":"146","replacedBy":"163"},{"ruleId":"148","replacedBy":"164"},{"ruleId":"158","severity":1,"message":"159","line":36,"column":9,"nodeType":"160","messageId":"161","endLine":38,"endColumn":10},{"ruleId":"150","severity":1,"message":"162","line":40,"column":15,"nodeType":"152","messageId":"153","endLine":40,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":36,"column":9,"nodeType":"160","messageId":"161","endLine":38,"endColumn":10},{"ruleId":"150","severity":1,"message":"162","line":40,"column":15,"nodeType":"152","messageId":"153","endLine":40,"endColumn":22},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'roleAlow' is assigned a value but never used.","Identifier","unusedVar",["165"],["166"],"'useRef' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'dataRes' is assigned a value but never used.",["165"],["166"],"no-global-assign","no-unsafe-negation"]